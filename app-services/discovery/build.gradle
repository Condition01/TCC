plugins {
	id "org.springframework.boot" version "$springBootVersion"
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'com.palantir.docker' version '0.26.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

ext {
	set('springCloudVersion', "Greenwich.SR4")
}

group = 'br.com.ifeira'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
	testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
	implementation "org.springframework.boot:spring-boot-starter-actuator:$springBootVersion"
	implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.23'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

docker {
	name "${project.name}"
	dockerfile file('./docker/Dockerfile')
	copySpec.from(jar).rename('.*', 'app.jar')
	buildArgs(['JAR_FILE': 'app.jar'])
}

docker.dependsOn(bootJar)

task runDiscovery(type: JavaExec, dependsOn: assemble) {
	classpath = sourceSets.main.runtimeClasspath
	main = 'br.com.ifeira.discovery.DiscoveryApplication'
}

task runDiscoveryDev(type: JavaExec, dependsOn: assemble) {
	classpath = sourceSets.main.runtimeClasspath
	main = 'br.com.ifeira.discovery.DiscoveryApplication'
	args '--spring.profiles.active=dev'
}