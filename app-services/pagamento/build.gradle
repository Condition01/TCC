plugins {
	id "org.springframework.boot" version "$springBootVersion"
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'com.palantir.docker' version '0.26.0'
}

group = 'br.com.ifeira'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

test.onlyIf { !project.hasProperty('testProperty') }

test {
	exclude '**/**'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "org.springframework.boot:spring-boot-starter-actuator:$springBootVersion"
	implementation('org.springframework.boot:spring-boot-starter-jdbc')
	implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.21'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.1'

	implementation(project(':app-services:compras:compra-shared'))
	implementation(project(':app-services:pagamento:pagamento-shared'))
}

docker {
	name "${project.name}"
	dockerfile file('./docker/Dockerfile')
	copySpec.from(jar).rename('.*', 'app.jar')
	buildArgs(['JAR_FILE': 'app.jar'])
}

docker.dependsOn(bootJar)

task runPagamento(type: JavaExec, dependsOn: assemble) {
	classpath = sourceSets.main.runtimeClasspath
	main = 'br.com.ifeira.pagamento.PagamentoApplication'
}

task runPagamentoDev(type: JavaExec, dependsOn: assemble) {
	classpath = sourceSets.main.runtimeClasspath
	main = 'br.com.ifeira.pagamento.PagamentoApplication'
	args '--spring.profiles.active=dev'
}