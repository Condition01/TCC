swagger: "2.0"
info:
  description: "Documentação de INTERFACES IFeira"
  version: "1.0.0"
  title: "Documentação Swagger IFeira"
  contact:
    email: "brunofc11@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
basePath: "/api"
tags:
  - name: "compras"
    description: "Core da lógica de realização de pedidos e seus respectivos pagamentos"
    externalDocs:
      description: "Mais informações"
      url: "http://swagger.io"
  - name: "entregas"
    description: "Core da lógica de realização de entregas"
    externalDocs:
      description: "Mais informações"
      url: "http://swagger.io"
schemes:
  - "http"

paths:
  /compras/produto/{contexto}/listar:
    get:
      tags:
        - "compras"
      summary: "Lista todos os produtos."
      description: "Lista todos os produtos."
      operationId: "listarProdutos"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "contexto"
          in: "path"
          description: "Contexto da feira obrigatório para plataforma."
          required: true
          type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            description: "Devolve uma lista de produtos vinculados com a feira procurada."
            items:
              $ref: "#/definitions/ProdutoFeira"
  /compras/produto/{contexto}/buscarFLVS:
    get:
      tags:
        - "compras"
      summary: "Busca FLVs a partir de um parâmetro de busca."
      description: "Busca FLVs a partir de um parâmetro de busca."
      operationId: "buscarFLVs"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "contexto"
          in: "path"
          description: "Contexto da feira obrigatório para plataforma."
          required: true
          type: "string"
        - name: "nome"
          in: "query"
          required: true
          description: "Nome ou parte do nome do produto buscado."
          type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            description: "Devolve uma lista de produtos vinculados com a feira procurada."
            items:
              $ref: "#/definitions/ProdutoFeira"
  /compras/carrinho/{contexto}/recuperar:
    post:
      tags:
        - "compras"
      summary: "Recuperar carrinho a partir do código do produto e da quantidade."
      description: "Recuperar carrinho a partir do código do produto e da quantidade."
      operationId: "recuperarCarrinho"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "contexto"
          in: "path"
          description: "Contexto da feira obrigatório para plataforma."
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Recebe um `map` indicando o código do produto em conjunto com sua quantidade."
          required: true
          schema:
            $ref: "#/definitions/CarrinhoReq"
      responses:
        "200":
          description: "Devolve um carrinho com os detalhes referentes ao produto."
          schema:
            $ref: "#/definitions/Carrinho"
  /compras/feira/listar:
    get:
      tags:
        - "compras"
      summary: "Busca feiras existentes na plataforma."
      description: "Busca feiras existentes na plataforma."
      operationId: "feiraListar"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Devolve uma lista com as feiras existentes na plataforma."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Feira"
  /compras/pedido/listar:
    get:
      tags:
        - "compras"
      summary: "Busca pedido realizados por um cliente."
      description: "Busca pedidos realizados por um cliente, não precisa receber o cliente como parâmetro, este é identificado a partir do token de autorização presente na header da requisição."
      operationId: "pedidoListar"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Devolve uma lista com os pedidos feitos por esse cliente."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Pedido"
      security:
        - oauth2:
            - "write"
            - "read"
  /compras/pedido/fechar:
    post:
      tags:
        - "compras"
      summary: "Envia o carrinho do cliente para criar e processar um pedido."
      description: "Envia o carrinho do cliente para criar e processar um pedido. No processamento este pedido será vinculado a uma cobrança."
      operationId: "pedidoFechar"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "cupom"
          in: "query"
          required: false
          description: "Cupom de desconto para ser aplicado ao valor total."
          type: "string"
        - name: "body"
          in: "body"
          description: "Recebe um carrinho no corpo da requisição."
          required: true
          schema:
            $ref: "#/definitions/Carrinho"
      responses:
        "200":
          description: "Devolve um pedido fechado com os atributos necessarios para ser utilizado em um pagamento."
          schema:
            $ref: "#/definitions/Pedido"
  /compras/pagamento/listar:
    get:
      tags:
        - "compras"
      summary: "Busca pagamentos realizados por um cliente."
      description: "Busca pagamentos realizados por um cliente, não precisa receber o cliente como parâmetro, este é identificado a partir do token de autorização presente na header da request."
      operationId: "pagamentoListar"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Devolve uma lista com os pagamentos feitos por esse cliente."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Pagamento"
      security:
        - oauth2:
            - "write"
            - "read"
  /compras/pagamento/enviar:
    post:
      tags:
        - "compras"
      summary: "Envia um pagamento referente a um pedido previamente processado."
      description: "Envia um pagamento referente a um pedido previamente processado."
      operationId: "pagamentoEnviar"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          description: "Recebe um objeto com os pedido e os dados do pagamento no corpo da requisição. Se o cliente quiser as persistência dos seus dados de pagamento para uso futuro deve confirmar utilizando o atributo `salvaDadosPag`."
          required: true
          schema:
            $ref: "#/definitions/PagamentoReq"
      responses:
        "200":
          description: "Devolve um pagamento processado com sucesso."
          schema:
            $ref: "#/definitions/Pagamento"
      security:
        - oauth2:
            - "write"
            - "read"
  /entregas/entrega/listar:
    get:
      tags:
        - "entregas"
      summary: "Busca entregas de um determinado entregador."
      description: "Busca entregas de um determinado entregador. Não há necessidade de enviar o entregador pois o mesmo é identificado pelo token de autorização."
      operationId: "entregaListar"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "status"
          in: "query"
          required: false
          description: "Status da entrega que deseja ser visualizado."
          type: "string"
      responses:
        "200":
          description: "Devolve uma lista com as entregas encontradas."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Entrega"
      security:
        - oauth2:
            - "write"
            - "read"
  /entregas/entrega/realizar:
    post:
      tags:
        - "entregas"
      summary: "Realiza uma entrega previamente processada."
      description: "Realiza uma entrega previamente processada que estava atribuída a um determinado entregador. O entregador é identificado pelo token de autorização."
      operationId: "entregaRealizar"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          description: "Recebe apenas o id da entrega que deseja-se realizar."
          required: true
          schema:
            $ref: "#/definitions/EntregaReq"
      responses:
        "200":
          description: "Devolve o objeto da entrega realizada."
          schema:
            $ref: "#/definitions/Entrega"
      security:
        - oauth2:
            - "write"
            - "read"
securityDefinitions:
  oauth2:
    type: "oauth2"
    tokenUrl: "http://localhost:9092/auth/oauth/token"
    flow: "password"
    scopes:
      write: "Permite escritas enviando um corpo de requisição."
      read: "Permite leituras."
definitions:
  EntregaReq:
    type: "object"
    properties:
      idEntrega:
        type: "string"
  Entrega:
    type: "object"
    properties:
      id:
        type: "string"
      entregador:
        type: "object"
        $ref: "#/definitions/Entregador"
      dataRealizacao:
        type: "string"
        format: "date"
      statusEntrega:
        type: "string"
        example: "ATRIBUIDA"
      pedido:
        type: "object"
        $ref: "#/definitions/Pedido"
  Entregador:
    type: "object"
    allOf:
      - $ref: '#/definitions/Pessoa'
      - type: "object"
        properties:
          feiras:
            type: "array"
            items:
              $ref: "#/definitions/Feira"
  PagamentoReq:
    type: "object"
    properties:
      credCardId:
        type: "string"
      numeroCartao:
        type: "string"
      validadeCartao:
        type: "string"
      cvv:
        type: "string"
      nomeCartao:
        type: "string"
      salvaDadosPag:
        type: "boolean"
      pedido:
        type: "object"
        $ref: "#/definitions/Pedido"
  Pagamento:
    type: "object"
    properties:
      id:
        type: "integer"
      statusPagamento:
        type: "string"
      numeroCartao:
        type: "string"
      validadeCartao:
        type: "string"
      nomeCartao:
        type: "string"
      cvv:
        type: "string"
      data:
        type: "string"
        format: "date"
      pedido:
        type: "object"
        $ref: "#/definitions/Pedido"
      credCardId:
        type: "string"
      credCardHash:
        type: "string"
      salvaDadosPag:
        type: "boolean"
  Pedido:
    type: "object"
    properties:
      data:
        type: "string"
        format: "date"
      statusPedido:
        type: "string"
      numeroPedido:
        type: "integer"
      dataEntrega:
        type: "string"
        format: "date"
      cupom:
        type: "object"
        $ref: "#/definitions/Cupom"
      cliente:
        type: "object"
        $ref: "#/definitions/Pessoa"
      carrinho:
        type: "object"
        $ref: "#/definitions/Carrinho"
      cobranca:
        type: "string"
      valorTotal:
        type: "number"
      valorOriginal:
        type: "number"
  Cupom:
    type: "object"
    properties:
      nome:
        type: "string"
      porcentagem:
        type: "number"
      ativo:
        type: "boolean"
  Pessoa:
    type: "object"
    properties:
      nome:
        type: "string"
      sobrenome:
        type: "string"
      cpf:
        type: "string"
      email:
        type: "string"
      dataNascimento:
        type: "string"
        format: "date"
      sexo:
        type: "string"
        example: "MASCULINO"
      endereco:
        type: "object"
        $ref: "#/definitions/Endereco"
      telefone:
        type: "string"
        example: "1199995555"
      role:
        type: "string"
      situacao:
        type: "string"
        example: "HABILITADO"
  ProdutoQuantidade:
    type: "object"
    properties:
      produtoFeira:
        type: "object"
        $ref: '#/definitions/ProdutoFeira'
      quantidade:
        type: "integer"
  ProdutoFeira:
    type: "object"
    properties:
      produto:
        type: "object"
        $ref: '#/definitions/Produto'
      feira:
        type: "object"
        $ref: '#/definitions/Feira'
      preco:
        type: "number"
      ativo:
        type: "boolean"
  Produto:
    type: "object"
    properties:
      nome:
        type: "string"
      descricao:
        type: "string"
      codProduto:
        type: "string"
      tipoProduto:
        type: "string"
      unidadeMedida:
        type: "string"
  Feira:
    type: "object"
    properties:
      nome:
        type: "string"
      endereco:
        type: "object"
        $ref: '#/definitions/Endereco'
      context:
        type: "string"
      latitude:
        type: "string"
      longitude:
        type: "string"
      diaEntrega:
        type: "integer"
  Endereco:
    type: "object"
    properties:
      numero:
        type: "string"
      cep:
        type: "string"
      complemento:
        type: "string"
      logradouro:
        type: "string"
      bairro:
        type: "string"
      cidade:
        type: "string"
      uf:
        type: "string"
  Carrinho:
    type: "object"
    properties:
      listaProdutoQuantidade:
        type: "array"
        items:
          $ref: "#/definitions/ProdutoQuantidade"
  CarrinhoReq:
    type: "object"
    additionalProperties:
      type: "string"